function calculate(expression) {
  const operators = {
    '+': (a, b) => a + b,
    '-': (a, b) => a - b,
    '*': (a, b) => a * b,
    '/': (a, b) => a / b
  };
  
  const precedence = {
    '+': 1,
    '-': 1,
    '*': 2,
    '/': 2
  };
  
  const stack = [];
  const postfix = [];

  let digit = '';

  for (let i = 0; i < expression.length; i++) {
    const char = expression[i];

    if (char === ' ') {
      // игнорируем пробелы
    } else if (!isNaN(char)) {
      digit += char;
    } else if (char in operators) { 
        if (digit) { 
          postfix.push(parseInt(digit)); 
          digit = ''; 
        } 
        while (stack.length > 0 && (precedence[char] <= precedence[stack[stack.length - 1]])) { 
          postfix.push(stack.pop()); 
        } 
        stack.push(char);
    } else if (char === '(') {
      if (digit) {
        postfix.push(parseInt(digit));
        digit = '';
      }
      stack.push(char);
    } else if (char === ')') {
      if (digit) {
        postfix.push(parseInt(digit));
        digit = '';
      }
      while (stack.length > 0 && stack[stack.length - 1] !== '(') {
        postfix.push(stack.pop());
      }
      stack.pop();
    }
  }

  if (digit) {
    postfix.push(parseInt(digit));
  }

  while (stack.length > 0) {
    postfix.push(stack.pop());
  }

  const result = [];

  postfix.forEach(token => {
    if (typeof token === 'number') {
      result.push(token);
    } else {
      const [b, a] = [result.pop(), result.pop()];
      result.push(operators[token](a, b));
    }
  });

  return result.pop();
}

console.log(calculate('4000 - 16000/16'));
